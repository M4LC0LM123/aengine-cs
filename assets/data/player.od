#macro BOX 0
#macro SPHERE 1
#macro CYLINDER 2
#macro CAPSULE 3
#macro CONE 4
#macro TERRAIN 5
#macro MODEL 6

#macro DYNAMIC 0
#macro STATIC 1

#macro POINT_LIGHT 1
#macro DIRECTIONAL_LIGHT 0

#macro EMPTY ""

#mod prefab
object player {
    string tag = "playa";

    float x = 0;
    float y = 10;
    float z = 0;

    float width = 1;
    float height = 1;
    float depth = 1;

    float rx = 0; // rotation x (pitch)
    float ry = 0; // rotation y (yaw)
    float rz = 0; // rotation z (roll)
    
    // "list" of components format "component_name, component_name, component_name"
    string components = "rb, zombie_mesh";
}

object rb {
    string type = "RigidBodyComponent";

    float mass = 1;

    int shape = SPHERE;
    int body_type = DYNAMIC;

    string model = EMPTY;

    string heightmap = EMPTY;
}

// other tests

object zombie_mesh {
    string type = "MeshComponent";

    int shape = MODEL;

    int r = 255;
    int g = 255;
    int b = 255;
    int a = 255;

    bool isModel = true;
   
    string texture = EMPTY;
    string model = "assets/models/zombie.glb";

    string heightmap = EMPTY;

    int scale = 1;
}

object zombie {
    string type = "RigidBodyComponent";

    float mass = 1;
    
    int shape = MODEL;
    int body_type = DYNAMIC;

    string model = "assets/models/zombie.glb";

    string heightmap = EMPTY;
}

object light {
    string type = "LightComponent";

    f32 intensity = 2.5;

    i32 r = 255;
    i32 g = 255;
    i32 b = 255;
    i32 a = 255;

    string shader_vert = "assets/shaders/light.vert";
    string shader_frag = "assets/shaders/light.frag";

    bool enabled = true;

    i32 light_type = POINT_LIGHT;
}

#mod prefab
object water {
    string tag = "water";

    float x = 0;
    float y = -8.5;
    float z = 0;

    float width = 25;
    float height = 0;
    float depth = 25;

    float rx = 0; // rotation x (pitch)
    float ry = 0; // rotation y (yaw)
    float rz = 0; // rotation z (roll)
    
    string components = "fluid, audio";
}

object audio {
    string type = "SpatialAudioComponent";

    string sound = "assets/splash.wav";

    float strength = 1;

    bool can_play = true;
}

object fluid {
    string type = "FluidComponent";

    string shader_vert = "";
    string shader_frag = "assets/wave.frag";

    string texture = "assets/water.png";

    i32 r = 255;
    i32 g = 255;
    i32 b = 255;
    i32 a = 125;

    f32 freqX = 25;
    f32 freqY = 25;
    f32 ampX = 5;
    f32 ampY = 5;
    f32 speedX = 8;
    f32 speedY = 8;
}

